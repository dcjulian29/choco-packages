Key,Value
alias.a,add
alias.ap,add --patch
alias.aliases,!git config --get-regexp 'alias.*' | sort
alias.amend,commit --amend
alias.assume,update-index --assume-unchanged
alias.assumed,!git ls-files -v | grep ^h | cut -c 3-
alias.b,branch
alias.bl,blame -w -M -C
alias.br,branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
alias.branches,branch -a
alias.c,commit
alias.ca,commit --amend
alias.cane,commit --amend --no-edit
alias.changed,status -sb
alias.changes,diff --stat -r
alias.change-log,!f() { git log ${1:-`git rev-list --max-parents=0 HEAD`}..${2:-HEAD} --pretty=format:'* %s %Cred%h%Creset - %C(bold blue)%an' --no-merges; }; f
alias.ci,commit
alias.clean,clean -d -f
alias.cm,commit --message
alias.co,checkout
alias.cob,checkout -b
alias.d,diff
alias.dc,diff --cached
alias.discard,reset HEAD --hard
alias.f,fetch
alias.feature-start,topic-start
alias.find,!git rev-list --all | xargs git grep -F
alias.gfff,flow feature finish
alias.gffs,flow feature start
alias.ghfs,!git topic-start feature/$1
alias.gfrf,flow release finish
alias.gfrs,flow release start
alias.graph,l -graph
alias.head-branch,!git remote show $(git upstream-name) | awk '/.*HEAD branch:/{print $NF}'
alias.ignored,ls-files --others --exclude-standard --ignored
alias.incoming,!git remote update -p; git whatchanged ..@{u}
alias.lastcommit,log --max-count=1
alias.lastref,rev-parse --short HEAD
alias.lasttag,describe --tags --abbrev=0
alias.l,"log --pretty=format:'%C(auto,yellow)%h%Creset %C(auto,yellow)%d%Creset %s' --max-count=15"
alias.la,"l --pretty=format:'%C(auto,yellow)%h%Creset %C(auto,yellow)%d%Creset %s %C(auto,green)(%an)'"
alias.ld,"l --pretty=format:'%C(auto,yellow)%h%Creset %C(auto,yellow)%d%Creset %s %C(auto,green)(%cr)' --date=relative"
alias.ll,l --numstat --max-count=10
alias.lp,"log --graph --pretty=format:'%C(auto,yellow)%h%Creset %C(auto,yellow)%d%Creset %s' --max-count=99 --branches"
alias.lpa,"lp --pretty=format:'%C(auto,yellow)%h%Creset -%C(auto,yellow)%d%Creset %s %C(auto,green)(%an)'"
alias.lpd,"lp --pretty=format:'%C(auto,yellow)%h%Creset -%C(auto,yellow)%d%Creset %s %C(auto,green)(%cr)' --date=relative"
alias.ls-ignored,ls-files -o -i
alias.ls-untracked,ls-files -o --exclude-standard
alias.open,!start `git config remote.origin.url`
alias.optimize,"!""git orphans; git prune-all; git repack-all"""
alias.orphans,fsck --full
alias.outgoing,whatchanged ..@{u}
alias.p,push
alias.pop,stash pop
alias.pp,!git up && git push
alias.prune,fetch --prune
alias.prune-all,!git prune --expire=now && git reflog expire --expire-unreachable=now --rewrite --all
alias.prune-merged,!git fetch -p && git branch -vv | grep ': gone]' | gawk '{print $1}' | xargs git branch -D
alias.pt,push --tags
alias.pu,push -u origin $(git upstream-name)
alias.put,push -u origin $(git upstream-name) --tags
alias.refs-by-date,for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short)'
alias.release-notes,!git lqc `git describe --tags --abbrev=0` HEAD
alias.remotes,remote -v show
alias.repack-all,repack -a -d -f --depth=300 --window=300 --window-memory=1g
alias.reset,clean -f -d -X
alias.s,status --show-stash --ahead-behind
alias.standup,!git log --since yesterday --author `git config user.email` --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --date=relative
alias.stashes,stash list
alias.stats,diff --stat
alias.sync,pp
alias.tags,tag
alias.today,log --stat --since='1 day ago' --graph --pretty=oneline --abbrev-commit --date=relative
alias.topic-start,!f() { git up; git cob $1; git push -u origin $1;}; f
alias.topic-update,!f() { git up; git merge --no-ff `git head-branch`; git push -u origin `git upstream-name`}; f
alias.undo-commit,reset --soft HEAD~1
alias.unstage,reset HEAD --
alias.up,pull --rebase --prune
alias.upstream,log HEAD..HEAD@{upstream}
alias.upstream-name,!git remote | egrep -o '(upstream|origin)' | tail -1
alias.wdiff,diff --word-diff
alias.who,shortlog -s -e --
alias.whorank,shortlog --summary --numbered --no-merges
branch.autosetuprebase,always
color.branch,auto
color.branch.current,cyan
color.branch.local,yellow
color.branch.remote,magenta
color.diff,auto
color.diff.frag,magenta bold
color.diff.meta,yellow bold
color.diff.new,green bold
color.diff.old,red bold
color.diff.whitespace,red reverse
color.status,auto
color.status.added,green
color.status.changed,red
color.status.untracked,cyan
color.ui,"true"
commit.gpgSign,"false"
core.autocrlf,"true"
core.excludesfile,~/.gitignore
core.filemode,"false"
core.fscache,"true"
core.pager,""
core.safecrlf,"false"
core.symlinks,"false"
credential.helper,manager
diff.guitool,winmerge
diff.tool,winmerge
difftool.vscode.cmd," ""'C:/Program Files/Microsoft VS Code/code.exe' --wait --diff $LOCAL $REMOTE"""
difftool.vscode.path," ""'C:/Program Files/Microsoft VS Code/code.exe'"""
difftool.winmerge.cmd," ""'C:/Program Files/WinMerge/winmergeu.exe' -e -u $LOCAL $REMOTE"""
difftool.winmerge.path," ""'C:/Program Files/WinMerge/winmergeu.exe'"""
fetch.prune,"true"
gitflow.feature.finish.no-ff,"true"
gpg.format,x509
gpg.x509.program,smimesign
help.format,html
i18n.filesEncoding,us-ascii
init.defaultBranch,main
merge.guitool,winmerge
merge.tool,winmerge
mergetool.keepBackup,"false"
mergetool.keepTemporaries,"false"
mergetool.prompt,"false"
mergetool.vscode.cmd," ""'C:/Program Files/Microsoft VS Code/code.exe' --wait '$MERGED'"""
mergetool.vscode.path," ""'C:/Program Files/Microsoft VS Code/code.exe'"""
mergetool.winmerge.cmd," ""'C:/Program Files/WinMerge/winmergeu.exe' -e -u  -wl -wr -fm -dl 'Mine: $LOCAL' -dm 'Merged: $BASE' -dr 'Theirs: $REMOTE' $LOCAL $BASE $REMOTE -o $MERGED"""
mergetool.winmerge.path," ""'C:/Program Files/WinMerge/winmergeu.exe'"""
pull.rebase,"true"
push.default,upstream
rebase.autoStash,"false"
user.name,Julian Easterling
